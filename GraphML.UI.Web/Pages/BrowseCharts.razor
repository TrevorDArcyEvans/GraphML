@page "/BrowseCharts/{OrganisationId}/{OrganisationName}/{RepositoryManagerId}/{RepositoryManagerName}/{RepositoryId}/{RepositoryName}/{GraphId}/{GraphName}"

@using GraphML
@using GraphML.Common
@using Flurl
@using GraphML.API.Controllers
@using System.Web;
@using Humanizer

<b>Charts</b><p/>
<h6>@HttpUtility.UrlDecode(OrganisationName) / @HttpUtility.UrlDecode(RepositoryManagerName) / @HttpUtility.UrlDecode(RepositoryName) / @HttpUtility.UrlDecode(GraphName)</h6>

<MatTable
  Items="@_charts"
  ApiUrl="@Url.Combine(@_config.API_URI(), "api", nameof(Chart), nameof(ChartController.ByOwner), GraphId)"
  PageParamName="pageIndex"
  PageSizeParamName="pageSize"
  PagingRecordsCountPropertyName="@nameof(PagedDataEx<GraphNode>.TotalCount).Camelize()"
  PagingDataPropertyName="@nameof(PagedDataEx<GraphNode>.Items).Camelize()"
  FilterByColumnName="@nameof(GraphNode.Name)"
  Striped="true"
  AllowSelection="true"
  class="mat-elevation-z5">
  <MatTableHeader>
    <th>Name</th>
  </MatTableHeader>
  <MatTableRow>
    <td>
      <MatButton Label="@context.Name" @onclick="@(e => GotoShowChart(@context))"></MatButton>
    </td>
    <td>
      <MatButton Icon="delete" @onclick="@(e => ConfirmDelete(@context))"></MatButton>
    </td>
  </MatTableRow>
</MatTable>

<div>
  <MatDialog @bind-IsOpen="@_deleteDialogIsOpen">
    <MatDialogTitle>Delete chart?</MatDialogTitle>
    <MatDialogActions>
      <MatButton OnClick="@(e => { _deleteItem = null; _deleteDialogIsOpen = false; })">Cancel</MatButton>
      <MatButton OnClick="@Delete">OK</MatButton>
    </MatDialogActions>
  </MatDialog>
</div>

<div>
  <MatButton OnClick="@NewDialog" Icon="create_new_folder" Raised="true">New chart...</MatButton>
  <MatDialog @bind-IsOpen="@_newDialogIsOpen">
    <MatDialogTitle>Create new chart</MatDialogTitle>
    <MatDialogContent>
      <MatTextField @bind-Value="@_dlgNewItemName"></MatTextField>
    </MatDialogContent>
    <MatDialogActions>
      <MatButton OnClick="@(e => { _newDialogIsOpen = false; })">Cancel</MatButton>
      <MatButton OnClick="@OkClick">OK</MatButton>
    </MatDialogActions>
  </MatDialog>
</div>

<MatButton Icon="arrow_back" @onclick="@(e => GotoBrowseGraphs())">Back</MatButton>
