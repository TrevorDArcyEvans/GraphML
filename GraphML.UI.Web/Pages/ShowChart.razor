@page "/ShowChart/{OrganisationId}/{OrganisationName}/{RepositoryManagerId}/{RepositoryManagerName}/{RepositoryId}/{RepositoryName}/{GraphId}/{GraphName}/{ChartId}/{ChartName}"

@using GraphML
@using System.Web;

<!-- required to resolve DiagramCanvas component -->
@using Blazor.Diagrams.Components

@using Flurl
@using GraphML.API.Controllers
@using GraphML.Common
@using Humanizer
@using QuikGraph
@using GraphML.UI.Web.Widgets

<b>Chart</b>&nbsp;&nbsp;
<MatButton Icon=@(_drawerOpened ? "more_horiz" : "more_vert") OnClick="@((e) => ButtonClicked())" Raised="true"/>

<span class="bread-crumb-trail">
  <Breadcrumb>
    <BreadcrumbItem>
      <BreadcrumbLink To="/BrowseOrganisations">Organisations</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbItem>
      <BreadcrumbLink To="@($"/BrowseRepositoryManagers/{OrganisationId}/{OrganisationName}")">@HttpUtility.UrlDecode(@OrganisationName)</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbItem>
      <BreadcrumbLink To="@($"/BrowseRepositories/{OrganisationId}/{OrganisationName}/{RepositoryManagerId}/{RepositoryManagerName}")">@HttpUtility.UrlDecode(@RepositoryManagerName)</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbItem>
      <BreadcrumbLink To="@($"/BrowseGraphs/{OrganisationId}/{OrganisationName}/{RepositoryManagerId}/{RepositoryManagerName}/{RepositoryId}/{RepositoryName}")">@HttpUtility.UrlDecode(@RepositoryName)</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbItem>
      <BreadcrumbLink To="@($"/BrowseCharts/{OrganisationId}/{OrganisationName}/{RepositoryManagerId}/{RepositoryManagerName}/{RepositoryId}/{RepositoryName}/{GraphId}/{GraphName}")">@HttpUtility.UrlDecode(@GraphName)</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbItem Active="true">
      <BreadcrumbLink To="#">@HttpUtility.UrlDecode(@ChartName)</BreadcrumbLink>
    </BreadcrumbItem>
  </Breadcrumb>
</span>

<MatDrawerContainer Style="width: 100vw; height: 100vh;">
  <MatDrawer @bind-Opened="@_drawerOpened">
    <MatAccordion>
      <MatExpansionPanel>
        <MatExpansionPanelSummary>
          <MatExpansionPanelHeader>Add</MatExpansionPanelHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
          <MatTable
            Items="@_graphNodes"
            ApiUrl="@Url.Combine(@_config.API_URI(), "api", nameof(GraphNode), nameof(GraphNodeController.ByOwner), GraphId)"
            PageParamName="pageIndex"
            PageSizeParamName="pageSize"
            PagingRecordsCountPropertyName="@nameof(PagedDataEx<GraphNode>.TotalCount).Camelize()"
            PagingDataPropertyName="@nameof(PagedDataEx<GraphNode>.Items).Camelize()"
            FilterByColumnName="@nameof(GraphNode.Name)"
            Striped="true"
            AllowSelection="true"
            class="mat-elevation-z5">
            <MatTableHeader>
              <th>Name</th>
            </MatTableHeader>
            <MatTableRow>
              @{
                var id = @context.Id;
                <td draggable="true" @ondragstart="@(() => OnDragNodeStart(@id))">@context.Name</td>
              }
            </MatTableRow>
          </MatTable>
        </MatExpansionPanelDetails>
      </MatExpansionPanel>

      <MatExpansionPanel>
        <MatExpansionPanelSummary>
          <MatExpansionPanelHeader>New</MatExpansionPanelHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
          <MatTable
            Items="@_icons"
            FilterByColumnName="Name"
            Striped="true"
            AllowSelection="true"
            class="mat-elevation-z5">
            <MatTableRow>
              <span draggable="true" @ondragstart="@(() => OnDragNewStart(context))">
                <td>
                  <img src="@context"/>
                </td>
                <td>@context</td>
              </span>
            </MatTableRow>
          </MatTable>
        </MatExpansionPanelDetails>
      </MatExpansionPanel>
    </MatAccordion>
  </MatDrawer>

  <MatDrawerContent>

    <SpinLoader IsLoading="@_isBusy">
      <LoadingTemplate>
        <GraphMLSpinner/>
      </LoadingTemplate>
      <ContentTemplate>

        <!--
        Parent of DiagramCanvas has to have a fixed width/height
        or it will not be rendered.

        100vw = 100% viewport width
        100vh = 100% viewport height
        -->
        <div class="diagram-container row h-100 v-100" oncontextmenu="return false;" ondragover="event.preventDefault();" @ondragover:preventDefault @ondrop="OnDrop">
          <CascadingValue Value="_diagram">
            <DiagramCanvas></DiagramCanvas>
          </CascadingValue>
        </div>

      </ContentTemplate>
    </SpinLoader>

  </MatDrawerContent>
</MatDrawerContainer>

<div>
  <MatSelect Label="Layout chart" @bind-Value="@_layout" Style="width: 125px">
    @foreach (var algo in new GraphShape.Algorithms.Layout.StandardLayoutAlgorithmFactory<string, IEdge<string>, IBidirectionalGraph<string, IEdge<string>>>().AlgorithmTypes)
    {
      <MatOption TValue="string" Value="@algo">@algo</MatOption>
    }
  </MatSelect>

  <MatButton Icon="grid_on" @onclick="@(e => OnLayout(_layout))" Raised="true">Go!</MatButton>
</div>

<div>
  <MatButton Icon="save" @onclick="@(e => OnSave())">Save</MatButton>
</div>
<div>
  <MatButton Icon="arrow_back" @onclick="@(e => GotoBrowseCharts())">Back</MatButton>
</div>

<ContextMenu Id="NodeContextMenu" CssClass="z-10" AutoHide="true">
  <Item OnClick="@OnEditNode">Edit...</Item>
  <Item OnClick="@OnExpandNode">Expand node</Item>
  <Item OnClick="@OnShowParentChild">Show parent/child...</Item>
</ContextMenu>

<ContextMenu Id="LinkContextMenu" CssClass="z-10" AutoHide="true">
  <Item OnClick="@OnEditLink">Edit...</Item>
</ContextMenu>

<div>
  <MatDialog @bind-IsOpen="@_parentChildDialogIsOpen" CanBeClosed="true">
    <MatDialogTitle>Parent/Child Nodes</MatDialogTitle>
    <MatDialogContent>
      <hr/>
      <div>
        <b>Parents:</b><br/>
        <MatTable
          Items="@_parentNodes"
          FilterByColumnName="@nameof(Node.Name)"
          Striped="true"
          AllowSelection="true"
          class="mat-elevation-z5">
          <MatTableHeader>
            <th>Name</th>
          </MatTableHeader>
          <MatTableRow>
            <td>@context.Name</td>
          </MatTableRow>
        </MatTable>
      </div>
      <hr/>
      <div>
        <b>Selected node: </b> @_selectedNode?.Name
      </div>
      <hr/>
      <div>
        <b>Child node: </b> @_childNode?.Name
      </div>
    </MatDialogContent>
    <MatDialogActions>
      <MatButton OnClick="@(e => { _parentChildDialogIsOpen = false; })">OK</MatButton>
    </MatDialogActions>
  </MatDialog>
</div>

<div>
  <MatDialog @bind-IsOpen="@_newDialogIsOpen">
    <MatDialogTitle>Create new node</MatDialogTitle>
    <MatDialogContent>
      <MatTextField @bind-Value="@_dlgNewItemName"/>
    </MatDialogContent>
    <MatDialogActions>
      <MatButton OnClick="@(e => { _newDialogIsOpen = false; })">Cancel</MatButton>
      <MatButton OnClick="@OkNewClick">OK</MatButton>
    </MatDialogActions>
  </MatDialog>
</div>

<div>
  <MatDialog @bind-IsOpen="@_editNodeDialogIsOpen">
    <MatDialogTitle>Edit node</MatDialogTitle>
    <MatDialogContent>
      <div>
        <MatTextField Label="Name" @bind-Value="@_dlgEditNodeName" FullWidth="true"/>
      </div>
      <div>
        <img src="@_dlgEditNodeIconName"/>
        <MatTextField
          Label="Icon"
          Helpertext="Double click icon in list to change"
          HelperTextPersistent="true"
          @bind-Value="@_dlgEditNodeIconName"
          FullWidth="true"
          HideClearButton="false"
          ReadOnly="true"/>
      </div>

      <div>
        <MatAccordion>
          <MatExpansionPanel>
            <MatExpansionPanelSummary>
              <MatExpansionPanelHeader>Icons</MatExpansionPanelHeader>
            </MatExpansionPanelSummary>
            <MatExpansionPanelDetails>
              <MatTable
                Items="@_icons"
                FilterByColumnName="Name"
                Striped="true"
                AllowSelection="false"
                OnRowDbClick="@(obj => { _dlgEditNodeIconName = (string) obj; })"
                class="mat-elevation-z5">
                <MatTableRow>
                  <td>
                    <img src="@context"/>
                  </td>
                  <td>@context</td>
                </MatTableRow>
              </MatTable>
            </MatExpansionPanelDetails>
          </MatExpansionPanel>
        </MatAccordion>
      </div>
    </MatDialogContent>

    <MatDialogActions>
      <MatButton OnClick="@(e => { _editNodeDialogIsOpen = false; })">Cancel</MatButton>
      <MatButton OnClick="@OkEditNodeClick">OK</MatButton>
    </MatDialogActions>
  </MatDialog>
</div>

<div>
  <MatDialog @bind-IsOpen="@_editLinkDialogIsOpen">
    <MatDialogTitle>Rename link</MatDialogTitle>
    <MatDialogContent>
      <MatTextField @bind-Value="@_dlgEditLinkName"></MatTextField>
    </MatDialogContent>
    <MatDialogActions>
      <MatButton OnClick="@(e => { _editLinkDialogIsOpen = false; })">Cancel</MatButton>
      <MatButton OnClick="@OkEditLinkClick">OK</MatButton>
    </MatDialogActions>
  </MatDialog>
</div>

@code
{
  private bool _drawerOpened = true;

  private void ButtonClicked()
  {
    _drawerOpened = !_drawerOpened;
  }
}
