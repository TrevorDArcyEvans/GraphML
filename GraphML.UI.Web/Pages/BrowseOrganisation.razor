@page "/BrowseOrganisation/{OrganisationName}/{OrganisationId}"

@using GraphML
@using GraphML.API.Server
@using System.Web;

@inject IRepositoryManagerServer _repoMgrServer
@inject NavigationManager UriHelper

<h1>Repository Managers</h1>
@if (_repoMgrs == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <h2>@HttpUtility.UrlDecode(@OrganisationName)</h2>
  <ul class="list-group">
    @foreach (var repoMgr in _repoMgrs)
    {
      <li class="list-group-item">
        <span @onclick="((e) => BrowseRepositoryManager(@repoMgr))">@repoMgr.Name</span>
      </li>
    }
  </ul>
  <button @onclick="((e) => Browse())">Back</button>
}

@functions
{
  [Parameter]
  public string OrganisationName { get; set; }

  [Parameter]
  public Guid OrganisationId { get; set; }

  private IEnumerable<RepositoryManager> _repoMgrs;

  protected override async Task OnInitializedAsync()
  {
    _repoMgrs = await _repoMgrServer.ByOwners(new[] { OrganisationId });
  }

  private void BrowseRepositoryManager(RepositoryManager repoMgr)
  {
    UriHelper.NavigateTo($"/BrowseRepositoryManager/{repoMgr.Name}/{repoMgr.Id}");
  }

  private async Task Browse()
  {
    UriHelper.NavigateTo($"/Browse");
  }
}
