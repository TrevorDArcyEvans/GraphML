@page "/BrowseRepositoryManager/{RepositoryManagerName}/{RepositoryManagerId}"

@using GraphML
@using GraphML.API.Server
@using System.Web;

@inject IOrganisationServer _orgServer
@inject IRepositoryManagerServer _repoMgrServer
@inject IRepositoryServer _repoServer
@inject NavigationManager UriHelper

<h1>Repositories</h1>
@if (_repos == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <h2>@HttpUtility.UrlDecode(RepositoryManagerName)</h2>
  <ul class="list-group">
    @foreach (var repo in _repos)
    {
      <li class="list-group-item">
        <span @onclick="((e) => BrowseRepository(@repo))">@repo.Name</span>
      </li>
    }
  </ul>
  <button @onclick="((e) => BrowseOrganisation())">Back</button>
}

@functions
{
  [Parameter]
  public string RepositoryManagerName { get; set; }

  [Parameter]
  public string RepositoryManagerId { get; set; }

  private IEnumerable<Repository> _repos;

  protected override async Task OnInitializedAsync()
  {
    _repos = await _repoServer.ByOwners(new[] { RepositoryManagerId });
  }

  private void BrowseRepository(Repository repo)
  {
    UriHelper.NavigateTo($"/BrowseRepository/{repo.Name}/{repo.Id}");
  }

  private async Task BrowseOrganisation()
  {
    var repoMgr = (await _repoMgrServer.ByIds(new[] { RepositoryManagerId })).Single();
    var org = (await _orgServer.ByIds(new[] { repoMgr.OwnerId })).Single();
    UriHelper.NavigateTo($"/BrowseOrganisation/{org.Name}/{org.Id}");
  }
}
