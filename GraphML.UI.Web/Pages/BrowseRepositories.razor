@page "/BrowseRepositories/{OrganisationId}/{OrganisationName}/{RepositoryManagerId}/{RepositoryManagerName}"

@using GraphML
@using GraphML.Common
@using Microsoft.Extensions.Configuration
@using Flurl
@using GraphML.API.Controllers
@using System.Web;
@using Humanizer

@inject IConfiguration _config
@inject NavigationManager _navMgr

<h1>Repositories</h1>
<h4>@HttpUtility.UrlDecode(OrganisationName) / @HttpUtility.UrlDecode(RepositoryManagerName)</h4>

<MatTable
  Items="@_repos"
  ApiUrl="@Url.Combine(@_config.API_URI(), "api", nameof(Repository), nameof(RepositoryController.ByOwner), RepositoryManagerId)"
  PageParamName="pageIndex"
  PageSizeParamName="pageSize"
  PagingRecordsCountPropertyName="@nameof(PagedDataEx<Repository>.TotalCount).Camelize()"
  PagingDataPropertyName="@nameof(PagedDataEx<Repository>.Items).Camelize()"
  Striped="true"
  AllowSelection="true"
  class="mat-elevation-z5">
  <MatTableHeader>
    <th>Name</th>
    <th>Graphs</th>
    <th>Items</th>
  </MatTableHeader>
  <MatTableRow>
    <td>@context.Name</td>
    <td>
      <MatButton Icon="multiline_chart" @onclick="@(e => GotoBrowseGraphs(@context))"/>
    </td>
    <td>
      <MatButton Icon="vertical_split" @onclick="@(e => GotoBrowseItems(@context))"/>
    </td>
  </MatTableRow>
</MatTable>
<MatButton Icon="arrow_back" @onclick="@(e => GotoBrowseRepositoryManagers())">Back</MatButton>

@functions
{
  [Parameter]
  public string OrganisationName { get; set; }

  [Parameter]
  public string OrganisationId { get; set; }

  [Parameter]
  public string RepositoryManagerName { get; set; }

  [Parameter]
  public string RepositoryManagerId { get; set; }

  private Repository[] _repos;

  private void GotoBrowseGraphs(Repository repo)
  {
    _navMgr.NavigateTo($"/BrowseGraphs/{OrganisationId}/{OrganisationName}/{RepositoryManagerId}/{RepositoryManagerName}/{repo.Id}/{repo.Name}");
  }

  private void GotoBrowseItems(Repository repo)
  {
    _navMgr.NavigateTo($"/BrowseItems/{OrganisationId}/{OrganisationName}/{RepositoryManagerId}/{RepositoryManagerName}/{repo.Id}/{repo.Name}");
  }

  private void GotoBrowseRepositoryManagers()
  {
    _navMgr.NavigateTo($"/BrowseRepositoryManagers/{OrganisationId}/{OrganisationName}");
  }
}
