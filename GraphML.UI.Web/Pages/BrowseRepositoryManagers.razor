@page "/BrowseRepositoryManagers/{OrganisationId}/{OrganisationName}"

@using GraphML
@using GraphML.Common
@using System.Web;
@using Microsoft.Extensions.Configuration
@using Flurl
@using GraphML.API.Controllers
@using Humanizer

@inject IConfiguration _config
@inject NavigationManager _navMgr

<h1>Repository Managers</h1>
<h4>@HttpUtility.UrlDecode(@OrganisationName)</h4>

<MatTable
  Items="@_repoMgrs"
  ApiUrl="@Url.Combine(@_config.API_URI(), "api", nameof(RepositoryManager), nameof(RepositoryManagerController.ByOwner), OrganisationId)"
  PageParamName="pageIndex"
  PageSizeParamName="pageSize"
  PagingRecordsCountPropertyName="@nameof(PagedDataEx<RepositoryManager>.TotalCount).Camelize()"
  PagingDataPropertyName="@nameof(PagedDataEx<RepositoryManager>.Items).Camelize()"
  Striped="true"
  AllowSelection="true"
  class="mat-elevation-z5">
  <MatTableHeader>
    <th>Name</th>
    <th>Repositories</th>
  </MatTableHeader>
  <MatTableRow>
    <td>@context.Name</td>
    <td>
      <MatButton Icon="settings_input_component" @onclick="@(e => GotoBrowseRepositories(@context))"/>
    </td>
  </MatTableRow>
</MatTable>

<div>
  <MatButton Icon="cloud_upload" @onclick="@(e => GotoImporter())">Import</MatButton>
</div>
<MatButton Icon="arrow_back" @onclick="@(e => GotoBrowseOrganisations())">Back</MatButton>

@functions
{
  [Parameter]
  public string OrganisationName { get; set; }

  [Parameter]
  public string OrganisationId { get; set; }

  private RepositoryManager[] _repoMgrs;

  private void GotoBrowseRepositories(RepositoryManager repoMgr)
  {
    _navMgr.NavigateTo($"/BrowseRepositories/{OrganisationId}/{OrganisationName}/{repoMgr.Id}/{repoMgr.Name}");
  }

  private void GotoImporter()
  {
    _navMgr.NavigateTo($"/Importer/{OrganisationId}/{OrganisationName}");
  }

  private void GotoBrowseOrganisations()
  {
    _navMgr.NavigateTo($"/BrowseOrganisations");
  }
}
