@page "/BrowseOrganisations"

@using GraphML
@using GraphML.Interfaces.Server

@inject IOrganisationServer _orgServer
@inject NavigationManager _navMgr

<h1>Organisations</h1>

@if (_orgs == null)
{
  <p>
    <em>Loading...</em>
  </p>
}
else
{
  <table class="table">
    <thead class="thead-dark">
    <tr>
      <th scope="col">Name</th>
      <th scope="col">Repository Managers</th>
      <th scope="col">Contacts</th>
    </tr>
    </thead>
    <tbody>

    </tbody>
    @foreach (var org in _orgs)
    {
      <tr>
        <th scope="row">@org.Name</th>
        <th>
          <MatButton @onclick="@(e => GotoBrowseRepositoryManagers(@org))" class="fas fa-database btn btn-primary"/>
        </th>
        <th>
          <MatButton @onclick="@(e => GotoBrowseContacts(@org))" class="fas fa-users btn btn-primary"/>
        </th>
      </tr>
    }
  </table>
  <div>
    <MatPaginator Length="@_totalEnts" PageSize="@_pageSize" Page="@OnPage"></MatPaginator>
  </div>
}

@code
{
  private IEnumerable<Organisation> _orgs;
  int _totalEnts = 0;
  int _pageIndex = 0;
  int _pageSize = 25;

  protected override async Task OnInitializedAsync()
  {
    _totalEnts = await _orgServer.Count();
    _orgs = await _orgServer.GetAll(_pageIndex, _pageSize);
  }

  private async Task OnPage(MatPaginatorPageEvent e)
  {
    _pageSize = e.PageSize;
    _pageIndex = e.PageIndex;
    _orgs = await _orgServer.GetAll(_pageIndex, _pageSize);
  }

  private void GotoBrowseRepositoryManagers(Organisation org)
  {
    _navMgr.NavigateTo($"/BrowseRepositoryManagers/{org.Id}/{org.Name}");
  }

  private void GotoBrowseContacts(Organisation org)
  {
    _navMgr.NavigateTo($"/BrowseContacts/{org.Id}/{org.Name}");
  }
}
