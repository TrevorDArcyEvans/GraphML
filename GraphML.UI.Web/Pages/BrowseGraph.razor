@page "/BrowseGraph/{GraphName}/{GraphId}"

@using GraphML.API.Server
@using System.Web;

@inject IRepositoryServer _repoServer
@inject IGraphServer _graphServer
@inject Microsoft.AspNetCore.Components.IUriHelper UriHelper

<h1>Nodes &amp; Edges</h1>
<h2>@HttpUtility.UrlDecode(GraphName)</h2>
<ul class="list-group">
  <li class="list-group-item">
    <span onclick="@((e) => BrowseNodes())">Browse nodes</span>
  </li>
  <li class="list-group-item">
    <span onclick="@((e) => BrowseEdges())">Browse edges</span>
  </li>
</ul>
<button onclick="@((e) => BrowseRepository())">Back</button>

@functions
{
  [Parameter]
  private string GraphName { get; set; }

  [Parameter]
  private string GraphId { get; set; }

  private void BrowseNodes()
  {
    UriHelper.NavigateTo($"/BrowseNodes/{GraphName}/{GraphId}");
  }

  private void BrowseEdges()
  {
    UriHelper.NavigateTo($"/BrowseEdges/{GraphName}/{GraphId}");
  }

  private async Task BrowseRepository()
  {
    var graph = (await _graphServer.ByIds(new[] { GraphId })).Single();
    var repo = (await _repoServer.ByIds(new[] { graph.OwnerId })).Single();
    UriHelper.NavigateTo($"/BrowseRepository/{repo.Name}/{repo.Id}");
  }
}
