@page "/Importer/{OrganisationId}/{OrganisationName}"

@using System.Web;
@using GraphML.Datastore.Database.Importer
@using GraphML.Interfaces.Server
@using Newtonsoft.Json
@using System.IO

@inject IImporterServer _importerServer
@inject NavigationManager _navMgr
@inject IMatToaster _toaster

<h1>Importer</h1>
<h2>@HttpUtility.UrlDecode(@OrganisationName)</h2>
<div>
  <MatFileUpload OnChange="@FilesReadyForContent" Label="Drop a single file here or Browse"/>
  <MatTextField
    @bind-Value="@CurrentFileName"
    ReadOnly="true"
    FullWidth="true"
    Label="Data File"
    Icon="attach_file" />
  <MatTextField
    @bind-Value="@ImportSpec"
    Icon="settings"
    FullWidth="true"
    Label="Import Specification"
    TextArea="true"
    style="width: 100%; max-height: 500px; height: 500px;"/>
  <div>
    <MatButton Icon="build" @onclick="@(e => DoImport())">Import</MatButton>
  </div>
</div>
<MatButton Icon="arrow_back" @onclick="@(e => GotoBrowseRepositoryManagers())">Back</MatButton>

@code
{
  [Parameter]
  public string OrganisationName { get; set; }

  [Parameter]
  public string OrganisationId { get; set; }

  private string ImportSpec { get; set; }
  private string CurrentFileName { get; set; } = string.Empty;
  private IMatFileUploadEntry _currentFile;

  private void FilesReadyForContent(IMatFileUploadEntry[] files)
  {
    _currentFile = files.FirstOrDefault();
    if (_currentFile == null)
    {
      return;
    }
    CurrentFileName = _currentFile.Name;
  }

  private async Task DoImport()
  {
    var importSpecObj = JsonConvert.DeserializeObject<ImportSpecification>(ImportSpec);
    await using var ms = new MemoryStream();

    await _currentFile.WriteToStreamAsync(ms);
    await _importerServer.Import(importSpecObj, ms.ToArray(), CurrentFileName);

    _toaster.Add("Imported", MatToastType.Success, "Finished!");
  }

  private void GotoBrowseRepositoryManagers()
  {
    _navMgr.NavigateTo($"/BrowseRepositoryManagers/{OrganisationId}/{OrganisationName}");
  }
}
